# Suicide-Prediction
Leap 4.0 Major Project

MentalGeek Presents Suicide Prediction Program

===========================================================
Week 0 - Done
System Setup , created Solution Document 
And Go through Requirement (Both Resource And Knowledge)

Week 1 - Done
Get data gathered, cleaned and encoded

Week 2 
Defining relationships between data points 
(using covariance Matrix, variability comparison).

Week 3 
Evaluation of models (Logistic Regression, Kneighbors Classifier)

Week 4 
Implementation of remaining models 
(Decision Tree Classifier, Random forests, Bagging, Boosting, etc.) 

Week 5 
Predicting with neural Network and testing 

Week 6 
Presenting the Minimal Viable Product
==================================================================
MongoDB Cluster:

mongodb+srv://mental:geek@cluster0.lohic.mongodb.net/suicide
==================================================================
steps:

1. data loading
2. get data info (like number of rows n columns)

	Data Cleaning

3. clear NaN
4. Again see data info
	N Also check no data is lost
5. remove all un=necessary Data (like timestamp,comments)

	Data Sorting

6. Standarise Data (Like standarise genders to Male n Female from boy,girl,male,female, etc)

7. Encode Data in form of index numbers

8. Get Data average n percentages n etc
	
	Total Number of: 
	Average Numbers of: Males, Females, income
	sort: living condition

9. Plot correaltion matrix

10. data training

11. tuning evaluation of matrix

12. creating final model

13. neural networking with tensorflow

========================================================================

- Data loading,checking,cleaning nd encoding
- Correlation matrix
- Data Splitting
- Data feature importance
- Model Evaluation
- Tuning
	With GridsearchCV
	With RandomizedSearchCV
- Accuracy Bar Graph
- Modelling

======================================================

DataProcessing (in option there is direct loading of data from mongo in app.py)
	-> this contains data loading, checking, cleaning n encoding
CorrelationMatrix
	-> this contains correlation Matrix
DataSplitting
	-> this contains data spliting
FeatureImportance 
	-> this contains data feautre importance
ModelEvaluation
	-> this contains evaulation of model
TuningWithGridSearchCV
	-> this contains all GridSearchCV tuning
TuningwithRandomSearchCV
	-> this contains all RandomizedSearchCV tuning
AccuracyBarGraph
	-> this contains Accuracy Dict Graph plotting
Modelling
	-> this contains data modelling

=========================================================
accuracyDict:
{
 "Log_Reg_mod_tuning_GridSearchCV": 85.71428571428571,
 "KNN_tuning_GridSearchCV": 90.47619047619048,
 "Decision_Tree_tuning_GridSearchCV": 80.95238095238095,
 "Random_Forest_tuning_GridSearchCV": 85.71428571428571,
 "AdaBoost_tuning_GridSearchCV": 80.95238095238095,
 "Bagging_tuning_GridSearchCV": 90.47619047619048,
 "Log_Reg_mod_tuning_RandomSearchCV": 85.71428571428571,
 "KNN_tuning_RandomSearchCV": 90.47619047619048,
 "Decision_Tree_tuning_RandomSearchCV": 76.19047619047619,
 "Random_Forest_tuning_RandomSearchCV": 90.47619047619048,
 "AdaBoost_tuning_RandomSearchCV": 80.95238095238095,
 "Bagging_tuning_RandomSearchCV": 80.95238095238095
}
Time taken:  347.14750599861145 seconds

==========================================================